[JS 기본사용법]

폴더 =>
D:\ResWeb\200528\silsp\part03_JS\JS01_Intro\JS02_Basic

1. JS 코드 위치
 1) HTML 태그 내부
     => 인라인 자바스크립트
          (Inline JavaScript)
     파일명: silspBasic_1_1.html
     =>
      시작태그에 이벤트핸들러 속성을
      사용하는 방법

 2) HTML 파일 내부
       => 태그 내부는 아니지만 
             </body> 바로 앞에 표기함
       => 내부 자바스크립트
             (Inner JS, 이너 JS)
     파일명: silspBasic_1_2.html
       => <body>요소가 종료되기
            바로 직전에 <script>요소를
            사용하여 JS 코드를 적용하는
            방법, 이벤트핸들러 없이
                   사용가능

 3) HTML 파일 외부
     => 외부 JS, Outer JS
          외부 CSS 처럼
          JS파일을 별도로 만든 후
          HTML 파일에서 연동하여
          사용하는 방식.
    보기1. 외부 CSS
       <link rel="stylesheet"
           href="외부CSS파일경로">
    보기2. 외부 JS
    <script src="외부JS파일경로"></script>
    => 시작태그와 종료태그 사이에
         내용이 들어가면 안됨. 또한 공백없이 태그를
         연이어 작성함.
     파일명: silspBasic_1_3.html
     JS파일명: script/script_1_3.js

=> 인라인자바스크립트의 이벤트핸들러
      +
      내/외부 JS
      !이 방법은 사용자정의 함수를 만들어야 한다.
      (사용자정의) 함수 만드는 방법 =>

      function 함수명() {
        JS 코드;  // 입력받기, 처리, 출력하기
      }

      [사용법]
      html =>
      <태그 onclick="함수명()">텍스트</태그>
      js => 
      function 함수명() {
         alert("출력하고 싶은 내용");
      }

     파일명: silspBasic_1_4.html
     JS파일명: script/script_1_4.js


      참고.
      함수라고 모두 사용자정의 함수만 있는 것은 아님.
      함수는 사용자정의 함수와 내장 함수가 있다.
      함수를 메서드(Method)라고도 한다.
      함수는 코드만 올바르게 작성했다면
      순서와는 무관하다.
 


2. JS 프로그램 작성 방법
 1) 입력받기
 2) 계산 또는 처리
 3) 출력

 1)~3)에 적용되는 공통 사항
 => (1) 특정 값 또는 html, css의 입/출력
       (2) 변수와 자료형
       (3) 연산자(=계산하는 방법)
       (4) 배열
       (5) 제어문
       (6) 함수
       (7) 객체

3. JS 코드 작성 규칙
  1) 특정 이름을 만들어야 할 경우 규칙
      (변수명, 함수명)
    (1) 첫글자숫자 안됨
    (2) 공백안됨 
    (3) 특수기호는 _, $만 허용함
    (4) 이미 사용하고 있는 단어 안됨
    (5) 대/소문자 구분함
  2) 자바스크립트에서 1줄의 구분은 
      세미콜론(;)이므로 반드시 기재해야 함.
  3) 오류가 1개라도 있다면 결과가 1도
      실행되지 않을 수 있음
      => 오류 검사(F12 기능키 개발자도구에서 
                       확인 후 수정)







